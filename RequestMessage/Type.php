<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

namespace RequestMessage;

use UnexpectedValueException;

/**
 * Protobuf type <code>RequestMessage.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>PUT_TASK = 0;</code>
     */
    const PUT_TASK = 0;
    /**
     * Generated from protobuf enum <code>INIT = 1;</code>
     */
    const INIT = 1;
    /**
     * Generated from protobuf enum <code>SET_STATISTIC = 2;</code>
     */
    const SET_STATISTIC = 2;
    /**
     * Generated from protobuf enum <code>SET_ERROR_RATE = 3;</code>
     */
    const SET_ERROR_RATE = 3;

    private static $valueToName = [
        self::PUT_TASK => 'PUT_TASK',
        self::INIT => 'INIT',
        self::SET_STATISTIC => 'SET_STATISTIC',
        self::SET_ERROR_RATE => 'SET_ERROR_RATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \RequestMessage_Type::class);

